<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.everlook.myweb.persistence.dao.system.rbac.role.CommSysRoleMapper">
  <resultMap id="BaseResultMap" type="cn.everlook.myweb.persistence.entity.assort.rbac.role.CommSysRole">
    <id column="ID" property="id" jdbcType="INTEGER"/>
    <result column="NAME" property="name" jdbcType="VARCHAR"/>
    <result column="REMARK" property="remark" jdbcType="VARCHAR"/>
    <result column="AVAILABLE" property="available" jdbcType="INTEGER"/>
    <result column="ORDER_NUM" property="orderNum" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, NAME, REMARK, AVAILABLE, ORDER_NUM
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap"
          parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.role.CommSysRoleExample">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from comm_sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from comm_sys_role
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comm_sys_role
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.role.CommSysRoleExample">
    delete from comm_sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.role.CommSysRole">
    insert into comm_sys_role (ID, NAME, REMARK,
      AVAILABLE, ORDER_NUM)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
      #{available,jdbcType=INTEGER}, #{orderNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.role.CommSysRole">
    insert into comm_sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="available != null">
        AVAILABLE,
      </if>
      <if test="orderNum != null">
        ORDER_NUM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.role.CommSysRoleExample"
          resultType="java.lang.Integer">
    select count(*) from comm_sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comm_sys_role
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.available != null">
        AVAILABLE = #{record.available,jdbcType=INTEGER},
      </if>
      <if test="record.orderNum != null">
        ORDER_NUM = #{record.orderNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comm_sys_role
    set ID = #{record.id,jdbcType=INTEGER},
    NAME = #{record.name,jdbcType=VARCHAR},
    REMARK = #{record.remark,jdbcType=VARCHAR},
    AVAILABLE = #{record.available,jdbcType=INTEGER},
    ORDER_NUM = #{record.orderNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.role.CommSysRole">
    update comm_sys_role
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        AVAILABLE = #{available,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        ORDER_NUM = #{orderNum,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.role.CommSysRole">
    update comm_sys_role
    set NAME = #{name,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      AVAILABLE = #{available,jdbcType=INTEGER},
      ORDER_NUM = #{orderNum,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>


  <!--//根据用户id查询当前登录人的所有的角色-->
  <!--List<CommSysRole> queryRolesByUserId(Integer userId);-->
  <select id="queryRolesByUserId" resultMap="BaseResultMap"
          parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.role.CommSysRoleExample">
    SELECT role.id, role.name, role.remark, role.available from comm_sys_role role
     LEFT JOIN comm_sys_user_role ur on role.id = ur.rid
     LEFT JOIN comm_sys_user user on user.id = ur.uid
    where user.id = #{value}
  </select>


  <!--//查询全部的角色类型并展示-->
  <select id="queryAllRoles" resultMap="BaseResultMap"
          parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.role.CommSysRoleExample">
    select
    <include refid="Base_Column_List"/>
    from comm_sys_role
    <where>
      <if test="name!=null">
        and name like concat("%",#{name},"%")
      </if>
      <if test="remark!=null">
        and remark like concat("%",#{remark},"%")
      </if>
      <if test="available!=null">
        and available=#{available}
      </if>
    </where>
    order by order_Num
  </select>


  <select id="selectThisRoleUsingCount" resultType="java.lang.Integer"
          parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.role.CommSysRoleExample">
    SELECT COUNT(rid) FROM comm_sys_user_role WHERE rid = #{id}
  </select>

  <select id="selectThisRoleUsingCountById" resultType="java.lang.Integer"
          parameterType="java.lang.Integer">
    SELECT COUNT(rid) FROM comm_sys_user_role WHERE rid = #{id}
  </select>


  <delete id="deleteRolePermissionByRoleId">
    delete from comm_sys_role_permission where rid=${value}
  </delete>


  <insert id="addRolePermission">
    insert into comm_sys_role_permission(rid, pid) values (#{param1},#{param2});
  </insert>

  <!--//查询全部职位-->
  <select id="loadAllPosition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from comm_sys_role
    order by order_Num
  </select>


</mapper>