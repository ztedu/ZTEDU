<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.everlook.myweb.persistence.dao.system.rbac.dept.CommSysDeptMapper">
  <resultMap id="BaseResultMap" type="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDept">
    <id column="ID" property="id" jdbcType="INTEGER"/>
    <result column="PID" property="pid" jdbcType="INTEGER"/>
    <result column="NAME" property="name" jdbcType="CHAR"/>
    <result column="SPREAD" property="spread" jdbcType="INTEGER"/>
    <result column="PARENT" property="parent" jdbcType="INTEGER"/>
    <result column="REMARK" property="remark" jdbcType="VARCHAR"/>
    <result column="LOC" property="loc" jdbcType="VARCHAR"/>
    <result column="AVAILABLE" property="available" jdbcType="INTEGER"/>
    <result column="ORDER_NUM" property="orderNum" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PID, NAME, SPREAD, PARENT, REMARK, LOC, AVAILABLE, ORDER_NUM
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap"
          parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDeptExample">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from comm_sys_dept
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from comm_sys_dept
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comm_sys_dept
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDeptExample">
    delete from comm_sys_dept
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDept">
    insert into comm_sys_dept (ID, PID, NAME, SPREAD,
      PARENT, REMARK, LOC,
      AVAILABLE, ORDER_NUM)
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{spread,jdbcType=INTEGER},
      #{parent,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{loc,jdbcType=VARCHAR},
      #{available,jdbcType=INTEGER}, #{orderNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDept">
    insert into comm_sys_dept
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="pid != null">
        PID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="spread != null">
        SPREAD,
      </if>
      <if test="parent != null">
        PARENT,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="loc != null">
        LOC,
      </if>
      <if test="available != null">
        AVAILABLE,
      </if>
      <if test="orderNum != null">
        ORDER_NUM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="spread != null">
        #{spread,jdbcType=INTEGER},
      </if>
      <if test="parent != null">
        #{parent,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="loc != null">
        #{loc,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDeptExample"
          resultType="java.lang.Integer">
    select count(*) from comm_sys_dept
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comm_sys_dept
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        PID = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.spread != null">
        SPREAD = #{record.spread,jdbcType=INTEGER},
      </if>
      <if test="record.parent != null">
        PARENT = #{record.parent,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.loc != null">
        LOC = #{record.loc,jdbcType=VARCHAR},
      </if>
      <if test="record.available != null">
        AVAILABLE = #{record.available,jdbcType=INTEGER},
      </if>
      <if test="record.orderNum != null">
        ORDER_NUM = #{record.orderNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comm_sys_dept
    set ID = #{record.id,jdbcType=INTEGER},
    PID = #{record.pid,jdbcType=INTEGER},
    NAME = #{record.name,jdbcType=CHAR},
    SPREAD = #{record.spread,jdbcType=INTEGER},
    PARENT = #{record.parent,jdbcType=INTEGER},
    REMARK = #{record.remark,jdbcType=VARCHAR},
    LOC = #{record.loc,jdbcType=VARCHAR},
    AVAILABLE = #{record.available,jdbcType=INTEGER},
    ORDER_NUM = #{record.orderNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDept">
    update comm_sys_dept
    <set>
      <if test="pid != null">
        PID = #{pid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=CHAR},
      </if>
      <if test="spread != null">
        SPREAD = #{spread,jdbcType=INTEGER},
      </if>
      <if test="parent != null">
        PARENT = #{parent,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="loc != null">
        LOC = #{loc,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        AVAILABLE = #{available,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        ORDER_NUM = #{orderNum,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDept">
    update comm_sys_dept
    set PID = #{pid,jdbcType=INTEGER},
      NAME = #{name,jdbcType=CHAR},
      SPREAD = #{spread,jdbcType=INTEGER},
      PARENT = #{parent,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR},
      LOC = #{loc,jdbcType=VARCHAR},
      AVAILABLE = #{available,jdbcType=INTEGER},
      ORDER_NUM = #{orderNum,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>


  <!--全查询-->
  <select id="queryAllDept" resultMap="BaseResultMap"
          parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDept">
    select
    <include refid="Base_Column_List"/>
    from comm_sys_dept
    <where>
      <if test="available!=null">
        and available=#{available}
      </if>
      <if test="name!=null">
        and name like concat("%",#{name},"%")
      </if>
      <if test="loc!=null">
        and loc like concat("%",#{loc},"%")
      </if>
      <if test="remark!=null">
        and remark like concat("%",#{remark},"%")
      </if>
      <if test="id!=null">
        and (id=#{id} or pid=#{id})
      </if>
    </where>
    order by ORDER_NUM
  </select>

  <!--全查询-->
  <select id="queryAllTreeSelectDept" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from comm_sys_dept
    order by ORDER_NUM
  </select>


  <!--List<CommSysDept> queryDeptListByDelId(DeptVo deptVo);-->
  <select id="queryDeptListByDelId" resultMap="BaseResultMap"
          parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDept">
    select
    <include refid="Base_Column_List"/>
    from comm_sys_dept
    <where>
      <if test="id!=null">
        and pid=#{id}
      </if>
    </where>
    order by ORDER_NUM
  </select>

  <!--getMaxIdWithDept-->
  <select id="getMaxIdWithDept" resultType="java.lang.Integer"
          parameterType="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDept">
    SELECT
      max( id )
    FROM
      comm_sys_dept
    ORDER BY
      ID
  </select>


  <resultMap id="getSelfResult" type="cn.everlook.myweb.persistence.entity.assort.rbac.dept.CommSysDept">
    <id column="ID" property="id" jdbcType="INTEGER"/>
    <result column="PID" property="pid" jdbcType="INTEGER"/>
    <result column="NAME" property="name" jdbcType="CHAR"/>
    <result column="SPREAD" property="spread" jdbcType="INTEGER"/>
    <result column="PARENT" property="parent" jdbcType="INTEGER"/>
    <result column="REMARK" property="remark" jdbcType="VARCHAR"/>
    <result column="LOC" property="loc" jdbcType="VARCHAR"/>
    <result column="AVAILABLE" property="available" jdbcType="INTEGER"/>
    <result column="ORDER_NUM" property="orderNum" jdbcType="INTEGER"/>
    <collection column="ID" property="deptList" select="getNestChildDeptListById"></collection>
    <!--查到的id作为下次的pid-->
  </resultMap>

  <!--查询某一个节点的子节点，结果为嵌套的形式-->
  <select id="getNestChildDeptListById" resultMap="getSelfResult">
    SELECT
	    *
    FROM
	    comm_sys_dept
    WHERE
	    available = 1
	  AND pid = #{id}
    ORDER BY
	    ORDER_NUM
  </select>


  <!--调用自定义的函数来获取制定的id下面的所有的子部门，结果集为单一的结果集信息-->
  <!--SELECT * FROM comm_sys_dept WHERE FIND_IN_SET(id,getChildrenDept(31));-->
  <!--<select id="getSpellFull" parameterType="java.lang.String" resultType="java.lang.String">-->
  <!--SELECT getSpellFull(#{name}) FROM dual-->
  <!--</select>-->
  <select id="getChildrenDept" resultMap="BaseResultMap" parameterType="java.lang.Integer">
     SELECT * FROM comm_sys_dept WHERE FIND_IN_SET(id,getChildrenDept(#{id}))
  </select>

  <select id="getParentDepts" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      SELECT *
          FROM (
              SELECT
                      @r AS _id,
                      (SELECT @r := pid FROM comm_sys_dept WHERE id = _id) AS parent_id,
                       @l := @l + 1 AS lvl
              FROM
                      (SELECT @r := #{id}, @l := 0) vars,
                      comm_sys_dept h
              WHERE @r <![CDATA[ <> ]]> 0) T1
          JOIN comm_sys_dept T2
          ON T1._id = T2.id
      ORDER BY id
  </select>

</mapper>