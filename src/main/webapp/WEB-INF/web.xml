<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
  <display-name>Archetype Created Web Application</display-name>

  <!--通过配置ContextLoaderListener监听器，使容器启动时，自动加载applicationContext配置，因为它实现了ServletContextListener这个接口，容器启动时会自动执行它实现的方法。-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>


  <!--配置spring配置文件的位置和名称-->
  <!-- Spring beans 配置文件所在目录 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>


  <!-- spring mvc 配置 默认加载/WEB-INF/spring-servlet.xml-->
  <servlet>
    <servlet-name>spring</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--<init-param>-->
    <!--<param-name>contextConfigLocation</param-name>-->
    <!--<param-value>classpath:spring/springmvc.xml</param-value>-->
    <!--</init-param>-->
  </servlet>
  <servlet-mapping>
    <servlet-name>spring</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>


  <!-- Encoding 编码，解决乱码-->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <!--强制使用utf-8编码-->
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- druid -->
  <servlet>
    <servlet-name>DruidStatServlet</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    <init-param>
      <param-name>loginUsername</param-name>
      <param-value>druid</param-value>
    </init-param>
    <init-param>
      <param-name>loginPassword</param-name>
      <param-value>druid</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>DruidStatServlet</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>
  <filter>
    <filter-name>DruidWebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <init-param>
      <param-name>exclusions</param-name>
      <param-value>*.js,*.css,*.jpg,*.png,*.ico,*.gif,/druid/*</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>DruidWebStatFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--Shiro-->
  <!--Filter的代理类-->
  <!--代理类会自动到IOC容器中找在filter-name当值对应的bean对象-->
  <!-- DelegatingFilterProxy作用是自动到Spring容器查找名字为shiroFilter的bean并把所有的Filter操作委托给它，
    然后将shiro配置到Spring容器即可。 -->
  <filter>
    <filter-name>shiroFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <init-param>
      <!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->
      <param-name>targetFilterLifecycle</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>shiroFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!-- Kaptcha Servlet -->
  <servlet>
    <servlet-name>Kaptcha</servlet-name>
    <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
    <!-- 参数: 验证码图片高度 -->
    <init-param>
      <param-name>kaptcha.border</param-name>
      <param-value>no</param-value>
    </init-param>
    <init-param>
      <param-name>kaptcha.border.color</param-name>
      <param-value>105,179,90</param-value>
    </init-param>
    <init-param>
      <param-name>kaptcha.textproducer.font.color</param-name>
      <param-value>46,139,87</param-value>
    </init-param>
    <!-- 图片样式：
         水纹 priv.kerlomz.kaptcha.impl.WaterRipple
         鱼眼 priv.kerlomz.kaptcha.impl.FishEyeGimpy
         阴影 priv.kerlomz.kaptcha.impl.ShadowGimpy, 默认值水纹
    -->
    <init-param>
      <param-name>kaptcha.obscurificator.impl</param-name>
      <param-value>com.google.code.kaptcha.impl.WaterRipple</param-value>
    </init-param>
    <!-- 图片宽度，默认值200 -->
    <init-param>
      <param-name>kaptcha.image.width</param-name>
      <param-value>110</param-value>
    </init-param>
     <!-- 图片高度，默认值50 -->
    <init-param>
      <param-name>kaptcha.image.height</param-name>
      <param-value>37</param-value>
    </init-param>
    <!-- 字体大小，默认值为40px -->
    <init-param>
      <param-name>kaptcha.textproducer.font.size</param-name>
      <param-value>35</param-value>
    </init-param>
    <!-- String kaptchaExpected = (String) session.getAttribute(com.google.code.kaptcha.Constants.KAPTCHA_SESSION_KEY);
           必须改成
      String kaptchaExpected = (String) session.getAttribute("shiroCaptcha"); -->
    <init-param>
      <param-name>kaptcha.session.key</param-name>
      <param-value>shiroCaptcha</param-value>
    </init-param>
    <!-- 验证码长度,默认值为5 -->
    <init-param>
      <param-name>kaptcha.textproducer.char.length</param-name>
      <param-value>4</param-value>
    </init-param>
    <!-- 文字间隔，默认值为2 -->
    <init-param>
      <param-name>kaptcha.textproducer.char.space</param-name>
      <param-value>6</param-value>
    </init-param>
    <init-param>
      <param-name>kaptcha.textproducer.char.string</param-name>
      <param-value>abcde123456789fmnwx</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>Kaptcha</servlet-name>
    <url-pattern>/kaptcha</url-pattern>
  </servlet-mapping>


  <welcome-file-list>
    <welcome-file>zt_index.jsp</welcome-file>
  </welcome-file-list>


  <error-page>
    <error-code>400</error-code>
    <location>/error/404.jsp</location>
  </error-page>
  <error-page>
    <error-code>403</error-code>
    <location>/error/403.jsp</location>
  </error-page>
  <!--<error-page>-->
  <!--<error-code>500</error-code>-->
  <!--<location>/error/500.jsp</location>-->
  <!--</error-page>-->


</web-app>